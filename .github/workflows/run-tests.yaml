name: Run tests

on:
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Install firebase-tools
        run: pnpm i -g firebase-tools
      - name: Switch firebase project to test
        run: firebase use test --token "${{ secrets.FIREBASE_TOKEN }}"
      - name: Export environment variables to file
        run: echo "${{ secrets.ENV }}" > .env
      - name: Run unit tests
        run: firebase emulators:exec "pnpm run test:unit" --token "${{ secrets.FIREBASE_TOKEN }}"
      - name: Report test results
        uses: actions/github-script@v6
        with:
          script: |
            const report = require("./reports/unit.json");
            for (const file of report.testResults) {
              for (const result of file.assertionResults) {
                if (result.status === "passed") continue;
                core.warning(result.failureMessages.join("\n"), {
                  title: "AssertionError",
                  file: file.name,
                  startLine: result.location.line,
                  startColumn: result.location.column,
                });
              }
            }
        if: success() || failure()
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: success() || failure()
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Install firebase-tools
        run: pnpm i -g firebase-tools
      - name: Switch firebase project to test
        run: firebase use test --token "${{ secrets.FIREBASE_TOKEN }}"
      - name: Export environment variables to file
        run: echo "${{ secrets.ENV }}" > .env
      - name: Install playwright
        run: pnpm dlx playwright install
      - name: Run e2e tests
        run: firebase emulators:exec "pnpm run test:e2e" --token "${{ secrets.FIREBASE_TOKEN }}"
